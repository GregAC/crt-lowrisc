load("//config:compiler.bzl", "setup")
load("//platforms/riscv32:devices.bzl", "DEVICES")

package(default_visibility = ["//visibility:public"])

SYSTEM_INCLUDE_PATHS = [
    "external/lowrisc_rv32imcb_files/lib/gcc/riscv32-unknown-elf/10.2.0/include",
    "external/lowrisc_rv32imcb_files/lib/gcc/riscv32-unknown-elf/10.2.0/include-fixed",
    "external/lowrisc_rv32imcb_files/riscv32-unknown-elf/include",
    "external/lowrisc_rv32imcb_files/riscv32-unknown-elf/include/c++/10.2.0",
    "external/lowrisc_rv32imcb_files/riscv32-unknown-elf/include/c++/10.2.0/backward",
    "external/lowrisc_rv32imcb_files/riscv32-unknown-elf/include/c++/10.2.0/riscv32-unknown-elf",
    "external/lowrisc_rv32imcb_files/riscv32-unknown-elf/sys-include",
]

filegroup(
    name = "compiler_components",
    srcs = [
        "//toolchains/lowrisc_rv32imcb/wrappers:all",
        "@lowrisc_rv32imcb_files//:all",
    ],
)

[setup(
    name = device.name,
    architecture = device.architecture,
    artifact_naming = device.artifact_naming,
    compiler_components = ":compiler_components",
    constraints = device.constraints,
    feature_set = device.feature_set,
    include_directories = SYSTEM_INCLUDE_PATHS,
    params = {
        "compiler": "clang",
    },
    substitutions = device.substitutions,
    tools = {
        "ar": "wrappers/ar",
        "cpp": "wrappers/cpp",
        "gcc": "wrappers/gcc",
        "gcov": "wrappers/gcov",
        "ld": "wrappers/ld",
        "nm": "wrappers/nm",
        "objcopy": "wrappers/objcopy",
        "objdump": "wrappers/objdump",
        "strip": "wrappers/strip",
    },
) for device in DEVICES]
